version: "3.8"

x-minio-common: &minio-common
  environment:
    MINIO_ROOT_USER: minio
    MINIO_ROOT_PASSWORD: password
x-airflow-common: &airflow-common
  image: airbnb_concierge_db_feed:test
  profiles: [ "airflow" ]
  environment: &airflow-common-env
    # Common Airflow config to webserver and scheduler/executor; see configuration reference at
    # https://airflow.apache.org/docs/apache-airflow/stable/configurations-ref.html
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: "postgresql://airflow:airflow@db:5432/airflow"
    AIRFLOW__CORE__FERNET_KEY: "ttxr5y8WYniiPhFbF6zPLNEC20ZVEH1Fll69IE2p9Bw="
    AIRFLOW__WEBSERVER__SECRET_KEY: "meE2gniT/pmkm3ABJznGjghZqcuiI788JGF=="

services:
  minio:
    image: minio/minio:latest
    container_name: minio-container
    ports:
      - 9000:9000
      - 9001:9001
    <<: *minio-common
    command: 'minio server /data --console-address ":9001"'
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5

  mc:
    image: minio/mc:latest
    container_name: minio-init
    <<: *minio-common
    depends_on:
      minio:
        condition: service_healthy
    restart: on-failure
    volumes:
      - ./companies:/tmp/companies
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set meero-minio http://minio-container:9000 $${MINIO_ROOT_USER} $${MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb meero-minio/companies;
      /usr/bin/mc anonymous set public meero-minio/companies;
      /usr/bin/mc cp --recursive /tmp/companies meero-minio/
      "
  db:
    build: docker_images/dev_database
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: dev
    volumes:
      - pgdata:/var/lib/postgresql/data
    shm_size: 1g

  metabase:
    image: metabase/metabase:v0.45.3
    profiles: [ "metabase" ]
    restart: always
    ports:
      - 3000:3000
    environment:
      MB_DB_TYPE: "postgres"
      MB_DB_DBNAME: "metabase"
      MB_DB_PORT: "5432"
      MB_DB_USER: "postgres"
      MB_DB_PASS: "dev"
      MB_DB_HOST: "db"

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always
    environment:
      <<: *airflow-common-env
      # Airflow docker image entrypoint config
      # https://airflow.apache.org/docs/docker-stack/entrypoint.html#additional-quick-test-options
      # To init Airflow user and db:
      _AIRFLOW_WWW_USER_USERNAME: "airflow"
      _AIRFLOW_WWW_USER_PASSWORD: "airflow"
      _AIRFLOW_WWW_USER_CREATE: "True"
      _AIRFLOW_DB_UPGRADE: "True"
      # `sabdbox_feed` package config:
      SANDBOX_DB_SQLALCHEMY_ENGINE: "postgresql://postgres:dev@db:5432/sandbox"
      ENDPOINT_URL: "${ENDPOINT_URL}"
      USERNAME: "${USERNAME}"
      PWD: "${PWD}"

      # sandbox object DAG config:
      DAG_START_DATE: "2021-07-01"

  airflow-webserver:
    <<: *airflow-common
    restart: always
    ports:
      - 8081:8080
    command: webserver
    environment:
      <<: *airflow-common-env
      AIRFLOW__WEBSERVER__INSTANCE_NAME: "Development Environment"

volumes:
  pgdata: